// Computer_System_mm_interconnect_3.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module Computer_System_mm_interconnect_3 (
		input  wire        System_PLL_sys_clk_clk,                         //                       System_PLL_sys_clk.clk
		input  wire        sdram2module_reset_reset_bridge_in_reset_reset, // sdram2module_reset_reset_bridge_in_reset.reset
		input  wire [4:0]  sdram2module_write_master_address,              //                sdram2module_write_master.address
		output wire        sdram2module_write_master_waitrequest,          //                                         .waitrequest
		input  wire [3:0]  sdram2module_write_master_byteenable,           //                                         .byteenable
		input  wire        sdram2module_write_master_chipselect,           //                                         .chipselect
		input  wire        sdram2module_write_master_write,                //                                         .write
		input  wire [31:0] sdram2module_write_master_writedata,            //                                         .writedata
		output wire [0:0]  s2m_fifo_in_address,                            //                              s2m_fifo_in.address
		output wire        s2m_fifo_in_write,                              //                                         .write
		output wire [31:0] s2m_fifo_in_writedata,                          //                                         .writedata
		input  wire        s2m_fifo_in_waitrequest                         //                                         .waitrequest
	);

	wire         sdram2module_write_master_translator_avalon_universal_master_0_waitrequest;   // s2m_fifo_in_translator:uav_waitrequest -> sdram2module_write_master_translator:uav_waitrequest
	wire  [31:0] sdram2module_write_master_translator_avalon_universal_master_0_readdata;      // s2m_fifo_in_translator:uav_readdata -> sdram2module_write_master_translator:uav_readdata
	wire         sdram2module_write_master_translator_avalon_universal_master_0_debugaccess;   // sdram2module_write_master_translator:uav_debugaccess -> s2m_fifo_in_translator:uav_debugaccess
	wire   [4:0] sdram2module_write_master_translator_avalon_universal_master_0_address;       // sdram2module_write_master_translator:uav_address -> s2m_fifo_in_translator:uav_address
	wire         sdram2module_write_master_translator_avalon_universal_master_0_read;          // sdram2module_write_master_translator:uav_read -> s2m_fifo_in_translator:uav_read
	wire   [3:0] sdram2module_write_master_translator_avalon_universal_master_0_byteenable;    // sdram2module_write_master_translator:uav_byteenable -> s2m_fifo_in_translator:uav_byteenable
	wire         sdram2module_write_master_translator_avalon_universal_master_0_readdatavalid; // s2m_fifo_in_translator:uav_readdatavalid -> sdram2module_write_master_translator:uav_readdatavalid
	wire         sdram2module_write_master_translator_avalon_universal_master_0_lock;          // sdram2module_write_master_translator:uav_lock -> s2m_fifo_in_translator:uav_lock
	wire         sdram2module_write_master_translator_avalon_universal_master_0_write;         // sdram2module_write_master_translator:uav_write -> s2m_fifo_in_translator:uav_write
	wire  [31:0] sdram2module_write_master_translator_avalon_universal_master_0_writedata;     // sdram2module_write_master_translator:uav_writedata -> s2m_fifo_in_translator:uav_writedata
	wire   [2:0] sdram2module_write_master_translator_avalon_universal_master_0_burstcount;    // sdram2module_write_master_translator:uav_burstcount -> s2m_fifo_in_translator:uav_burstcount

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (5),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (5),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (0),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (1),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) sdram2module_write_master_translator (
		.clk                    (System_PLL_sys_clk_clk),                                                       //                       clk.clk
		.reset                  (sdram2module_reset_reset_bridge_in_reset_reset),                               //                     reset.reset
		.uav_address            (sdram2module_write_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (sdram2module_write_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (sdram2module_write_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (sdram2module_write_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (sdram2module_write_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (sdram2module_write_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (sdram2module_write_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (sdram2module_write_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (sdram2module_write_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (sdram2module_write_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (sdram2module_write_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (sdram2module_write_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (sdram2module_write_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (sdram2module_write_master_byteenable),                                         //                          .byteenable
		.av_chipselect          (sdram2module_write_master_chipselect),                                         //                          .chipselect
		.av_write               (sdram2module_write_master_write),                                              //                          .write
		.av_writedata           (sdram2module_write_master_writedata),                                          //                          .writedata
		.av_burstcount          (1'b1),                                                                         //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                         //               (terminated)
		.av_begintransfer       (1'b0),                                                                         //               (terminated)
		.av_read                (1'b0),                                                                         //               (terminated)
		.av_readdata            (),                                                                             //               (terminated)
		.av_readdatavalid       (),                                                                             //               (terminated)
		.av_lock                (1'b0),                                                                         //               (terminated)
		.av_debugaccess         (1'b0),                                                                         //               (terminated)
		.uav_clken              (),                                                                             //               (terminated)
		.av_clken               (1'b1),                                                                         //               (terminated)
		.uav_response           (2'b00),                                                                        //               (terminated)
		.av_response            (),                                                                             //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                         //               (terminated)
		.av_writeresponsevalid  ()                                                                              //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (5),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) s2m_fifo_in_translator (
		.clk                    (System_PLL_sys_clk_clk),                                                       //                      clk.clk
		.reset                  (sdram2module_reset_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address            (sdram2module_write_master_translator_avalon_universal_master_0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (sdram2module_write_master_translator_avalon_universal_master_0_burstcount),    //                         .burstcount
		.uav_read               (sdram2module_write_master_translator_avalon_universal_master_0_read),          //                         .read
		.uav_write              (sdram2module_write_master_translator_avalon_universal_master_0_write),         //                         .write
		.uav_waitrequest        (sdram2module_write_master_translator_avalon_universal_master_0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (sdram2module_write_master_translator_avalon_universal_master_0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (sdram2module_write_master_translator_avalon_universal_master_0_byteenable),    //                         .byteenable
		.uav_readdata           (sdram2module_write_master_translator_avalon_universal_master_0_readdata),      //                         .readdata
		.uav_writedata          (sdram2module_write_master_translator_avalon_universal_master_0_writedata),     //                         .writedata
		.uav_lock               (sdram2module_write_master_translator_avalon_universal_master_0_lock),          //                         .lock
		.uav_debugaccess        (sdram2module_write_master_translator_avalon_universal_master_0_debugaccess),   //                         .debugaccess
		.av_address             (s2m_fifo_in_address),                                                          //      avalon_anti_slave_0.address
		.av_write               (s2m_fifo_in_write),                                                            //                         .write
		.av_writedata           (s2m_fifo_in_writedata),                                                        //                         .writedata
		.av_waitrequest         (s2m_fifo_in_waitrequest),                                                      //                         .waitrequest
		.av_read                (),                                                                             //              (terminated)
		.av_readdata            (32'b11011110101011011101111010101101),                                         //              (terminated)
		.av_begintransfer       (),                                                                             //              (terminated)
		.av_beginbursttransfer  (),                                                                             //              (terminated)
		.av_burstcount          (),                                                                             //              (terminated)
		.av_byteenable          (),                                                                             //              (terminated)
		.av_readdatavalid       (1'b0),                                                                         //              (terminated)
		.av_writebyteenable     (),                                                                             //              (terminated)
		.av_lock                (),                                                                             //              (terminated)
		.av_chipselect          (),                                                                             //              (terminated)
		.av_clken               (),                                                                             //              (terminated)
		.uav_clken              (1'b0),                                                                         //              (terminated)
		.av_debugaccess         (),                                                                             //              (terminated)
		.av_outputenable        (),                                                                             //              (terminated)
		.uav_response           (),                                                                             //              (terminated)
		.av_response            (2'b00),                                                                        //              (terminated)
		.uav_writeresponsevalid (),                                                                             //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                                          //              (terminated)
	);

endmodule
